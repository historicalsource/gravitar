	.TITLE LOOTST GRAVITAR TEST
	.SBTTL ***************************
	.SBTTL *
	.SBTTL *PROGRAMMER: RICH ADAM
	.SBTTL *
	.SBTTL * DISK 77 & B49
	.SBTTL *
	.SBTTL ***************************
	.ASECT
	.RADIX 16
	.=69
TESTNM:	.BLKB 1		;NEED A BYTE HERE
PNTTBL:	.BLKB 10.
ERPLC:	.BLKB 5
	.CSECT
	.NLIST
	.INCLUDE HLL65F
	.LIST
	.MACRO LAH ARG
	.BYTE 0A9
	.ENABL M68
	.WORD ARG
	.DSABL M68
	.=.-1
	.ENDM

	.MACRO LXL ARG
	.BYTE 0A2
	.WORD ARG
	.=.-1
	.ENDM
	.SBTTL POWERON
	.GLOBL POWERON,REHIIN,IRQ
	.GLOBL START,POKEY,EAZERO
	.GLOBL VGCNTR,VGVTR,VGSTAT,VGJSRL,VGSCA1
	.GLOBL VGMSGA,VGVTR1,VGHEX,VGHEXZ
	.GLOBL VGADD2,VGHALT,VGSCAL,VGVCTR
	.GLOBL HATCH,QTST6,WNDSE
	.GLOBL WHITE,XCOMP
	.GLOBL CLPAT,CLPT2,CL73
	.GLOBL FRBOX,HYSTR
	.GLOBL HLINE,FRCFL,VLINE
	.GLOBL DIGITZ,MAINLN,INHISC
	.GLOBL SWTST,OPTND,TSTCK
	.GLOBL INISOU,XYINIT
;GLOBAL VARIABLES
	
	.GLOBL EABAD,EAREQU,EAFLG
	.GLOBB TEMP1,TEMP2,TEMP3,TEMP4,POINT1
	.GLOBB VGBRIT,$CMODE,SYNC,POINT1,POINT2,POINT3,FRAME
	.GLOBB VGLIST,DIFF1
	.ENABL AMA
	.RADIX 16
	.CSECT AS2TST
	
	.NLIST
	.PAGE
	.INCLUDE VGMC	;<<<<<<<<<<<<<<<<<<<<<<<
	.INCLUDE LOONYC		;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	.LIST
	.LIST
;INITIAL INITIALS
CKUM6::	.BYTE 02
ININITLS:
	.BYTE 0,0,0		; EAROM WILL OVERWRITE
	.BYTE 19,1C,1C,1D,1C,0D
	.BYTE 0E,0F,1D,14,17,1C
	.BYTE 16,20,1C
POWERON:SEI
	LDX I,0FE		;C  INIT STACKF
	TXS
	LDA I,0
	STA VGSTOP		;C RESET VEC GEN
	CLD
	TAX
	BEGIN
	STA ZX,0
	STA AX,100
	STA AX,200
	STA AX,300
	STA X,400
	STA X,500
	STA X,600
	STA X,700
	STA AX,VECRAM
	STA AX,VECRAM+100
	STA AX,VECRAM+200
	STA AX,VECRAM+300
	STA AX,VECRAM+400
	STA AX,VECRAM+500
	STA AX,VECRAM+600
	STA AX,VECRAM+700
	STA X,POKEY
	STA X,POKEY2
	STA WTCHDG
	INX
	EQEND
	LDA #0C0
	STA XYRFLT
	LDA #7
	STA POKEY+0F		;TURN ON POKEY
	STA POKEY2+0F
	LDA IN0			;D  IF SELF TEST
	AND I,MSTEST
	IFEQ
	JMP RAMTST
	ENDIF
	LDA I,1			;C  INIT VG BUFFER
	STA VECRAM
	LDA I,0E2
	STA VECRAM+1
	LDA I,20
	STA VECRAM+3
	STA VECRAM+403
				;INIT UPDOWN OUTPUT POINTER
	LDA I,24
	STA VGLIST+1
	LDA I,2
	STA VGLIST
TSTCK:	CLI		;START THINGS RUNNING
	LDX #60		;EAROM WARM UP WAIT COUNTER
	BEGIN
	BEGIN
	LSR SYNC
	CSEND
	STA WTCHDG	;KEEP THING RUNNING
	DEX
	MIEND
	JSR REHIIN		;READ EA ROM INTO BUFFER
	BEGIN
	LDA EAFLG		;STILL READING IN?
	STA WTCHDG
	EQEND
	LDA EABAD		;DATA OK?
	LSR			;BIT 0
	IFCC
	JSR INHISC
	ENDIF
	JMP MAINLN
;SET UP INITIALS AND HIGH SCORE FOR EACH GAME
	.PAGE
	.SBTTL ZERO-PAGE TEST

RAMTST:	LDX	I,11		;BEGINNING PATTERN
	TXS			;S HOLDS PATTERN
	TXA
	STX	Z,0		;TEST CELL START @ 0
	LDY	I,0
2$:	LDX	I,1		;ONE LESS COUNT BEFORE IT WRAPS
;SCAN ALL FURLTE BYTES TO
;SEE IF ANY ARE ON AS A
;RESULT OF THIS LOAD
3$:	INY			;SCAN FORWARD
	LDA	AY,0		;ZERO ?
	BNE	5$		;NO - ERROR (HIGH BITS BAD)
	INX			;CHK HOW FAR SCANNED
	BNE	3$		;BRANCH - CONTINUE
	TSX
	TXA			;ACC = PATTERN
	STA	A,WTCHDG	;WTCHDGDOG
	INY			;POINT TO TEST CELL
	EOR	AY,0		;DOES IT HAVE PATTERN ?
	BNE	5$		;N0 - ERROR (HIGH BITS BAD)
	TXA			;ACC = PATTERN
	LDX	I,0
	STX	ZY,0		;ELSE - CLEAR CELL
	INY			;POINT TO NEXT TEST CELL
	BNE	4$		;IF PASS NOT COMPLETE
	ASL			;ELSE SHIFT PATTERN
	LDX	I,0		;IF DONE (0 = GOOD)
	BCS	STOP0		;BRANCH - DONE (GOOD)
4$:	TAX			;PATTERN -> X
	TXS			;	 -> S
	STX	ZY,0		;	 -> NEXT TEST CELL
	BNE	2$		;ALWAYS - REPEAT SCAN
5$:	TAX			;ANY HIGH BITS INDICATE BAD RAM
7$:	TXA
	LDY	I,82		;ASSUME LOW NIBBLE IS GOOD
	AND	I,0F		;CHECK IT
	BEQ	8$		;BRANCH - LOW NIBBLE GOOD
	LDY	I,12		;ELSE - SET Y ACCORDINGLY
8$:	TXA
	LDX	I,82		;ASSUME TOP NIBBLE IS GOOD
	AND	I,0F0		;CHECK IT
	BEQ	9$		;BRANCH - TOP NIBBLE GOOD
	LDX	I,12		;ELSE - SET X
9$:
	TYA
	TXS			;S = HIGH NIBBLE STATUS
	TAX			;X = LOW
RT.LP:	STX	A,POKEY		;NOISE = LOWER NIBBLE STATUS
	LDX	I,0A8
	STX	A,POKEY+1
	LDY	I,12.		;Y = HIGH BYTE OF COUNTER
10$:	LDX	I,100.		;X = LOW BYTE OF COUNTER
11$:	BIT	A,HALT
	BMI	11$		;BIT 7 (SIGN FLAG) OF HALT = 3000 HZ SQUARE WAVE
12$:	BIT	A,HALT
	BPL	12$
	STA	A,WTCHDG
	DEX
	BNE	11$		;INNER LOOP 255 * 333 US = 85 MS
	CPY	I,5
	BNE	13$
	STX	A,POKEY+1	;CLR NOISE
13$:	DEY
	BNE	10$		;OUTER LOOP 8 *  85 MS = 580 MS
	LSR			;TEST SIGN
	BCS	14$		;DONE
	TSX
	BNE	RT.LP		;ALWAYS
14$:
	JMP STOP1		;WAIT FOR SWITCH
STOP0:	LDX	I,0FF
	TXS			;INITIALIZE STACK (USED IN ROM TESTS)
	LDX I,0
	TXA
10$:	STA ZX,0		;ZERO ZERO-PAGE
	INX
	BNE 10$
	.PAGE
;
;	VECTOR GEN RAM TEST
;
	.SBTTL	VG RAM TEST
;
;
;
STEST1:	TAY			;Y=0
	LDA	I,1
5$:	STA	1		;START @ PAGE 1 (NY,0)
10$:	LDX	I,11		;STARTING PATTERN
	LDA	NY,0		;D  IF BAD CELL
	BNE 	20$
15$:	TXA
16$:	STA	NY,0		;WRITE
	EOR	NY,0		;AND COMPARE
	BNE	20$		;ERROR
	TXA
	ASL
	TAX
	BCC	16$		;NEXT PATTERN
	INY
	BNE	10$		;NEXT LOCATION
	STA	A,WTCHDG	;MUZZLE THAT BEAST
	INC	1
	LDX	1
	CPX	I,04		;PAGES 1 TO 3
	BCC	10$		;CHECK NEXT PAGE
	LDA	I,VECRAM/100
	CPX	I,VECRAM/100
	BCC	5$		;BEGIN NEXT @ 2000
	CPX	I,VECRAM/100+8
	BCC	10$		;CHECK UP TO 27FF
	JMP	STEST3		;RAM IS GOOD
20$:	LDX	1		;X = MSB (ADDRESS) ACC=BAD PATTERN
	CPX	I,VECRAM/100
	STA	2		;BAD PATTERN
	BCC	30$
	TXA
	SBC	I,<VECRAM/100>-4
30$:	LSR
	LSR
	AND	I,7
	TAY			;Y = # OF 1K BLOCK BAD
	LDA 	2
;THIS WILL BEEP TWO TONES FOR THE BAD RAM ONE OF THEM LOW
;THEN FOR TWICE THE NUMBER OF RAM SPACES BELOW IT WILL BEEP HIGH
STEST2:	STY	0		;0 = BAD RAM #
	STA	1		;1 = BAD BITS
5$:	LDA 	I,1
	STA	2
10$:	LDX	I,0A8
	LDY	I,82		;ASSUME GOOD RAM
	LDA	0
	BNE	30$		;IT IS
	LDA	1
	AND	I,0F		;LOW NIBBLE
	BEQ	30$		;GOOD
20$:	LDY	I,12		;BAD
30$:	STX	A,POKEY+1	;TONE/VOLUME
	STY	A,POKEY		;FREQUENCY
	LDA	I,9		;BAD
	CPY	I,12
	BEQ	35$		;YES
	LDA	I,1
35$:	TAY
	LDX	I,0
40$:	BIT	A,HALT
	BMI	40$
42$:	BIT 	A,HALT
	BPL	42$
	STA	A,WTCHDG	;NO WTCHDGIN' DOG
	DEX
	BNE	40$		;COUNT 256/3000 OF A SECOND
	DEY
	BNE	40$
	STX	A,POKEY+1	;CLR SOUND
	LDY	I,9
50$:	BIT	A,HALT
	BMI	50$
52$:	BIT	A,HALT
	BPL	52$
	STA	A,WTCHDG		;NO WTCHDGDOG
	DEX
	BNE	50$		;256/3000
	DEY
	BNE	50$
	LDA	0
	BNE	60$
	LDA	1
	LSR
	LSR
	LSR
	LSR
	STA	1
60$:	DEC	2
	BEQ	10$
	DEC 0
	BPL	5$		;ALWAYS
STOP1:	STA	A,WTCHDG	;NO WTCHDGDOG
	LDA #-1
	STA ERPLC			;BAD RAM
	.PAGE
	.SBTTL ROM TEST
;
;	ROM TEST
;
STEST3:	LDA	I,0		;EOR CKSUM ROMS
	TAX
	BEGIN
	STA X,100
	STA X,200
	STA X,300		;CLEAR RAM
	DEX
	EQEND
	TAY
	STA	TEMP1
	LDA	I,<VECROM/100>+8	;WILL DO 2800 AS SPECIAL CASE....
				;WILL START WITH 4K (16 PAGES) CHIPS
	BEGIN
	STA	TEMP2
	LDA	I,16.
6$:	STA	TEMP3		;# PAGES
	TXA			;SEED FOR CKSUM
	BEGIN
	BEGIN
	EOR 	NY,TEMP1
	INY
	EQEND
	INC	TEMP2
	STA	A,WTCHDG	;NO WTCHDGDOG
	DEC	TEMP3
	EQEND
	STA	ZX,PNTTBL+1	;CKSUMS (SPACE LEFT FOR 2800))
	INX
	BEQ SNDERR			;IF 0, WAS SPECIAL CASE 2800
	LDA	TEMP2
	CMP	I,<VECROM/100>+38	;14K OF VECROM
	IFEQ
	LDA 	I,PROG/100
	STA 	TEMP2
	ENDIF
	CMP	I,0F0		;UP TO 9000
	CSEND
;JUST FINISHED 4K ROMS...........
;MUST NOW DO SPECIAL CASE 2K ROM AT 2800
	LDX #-1			;WANT CHECKSUM AT PROPER LOCATION
	LDA #VECROM/100
	STA TEMP1+1		;START LOCATION
	LDA #8			;ONLY 8 PAGES HERE
	BNE 6$			;********ALWAYS************
;**********************************************************
SNDERR:				;JUST A LABEL
	LDA	PNTTBL
	ORA	PNTTBL+1	;ANY VGROM ERROR?
	IFNE
	LDA	I,0F0		;IF YES, SOUND OFF
	LDX	I,0A2
	STA	A,POKEY+4
	STX	A,POKEY+4+1
	ENDIF
;
; (TEMP2,+1) = SCRATCH
; (PNTTBL,+6) = 7 CHKSUMS FOR ROMS
; (TEMP3)    = DIAG STEP #
; (ERPLC,+3) = ERROR FLAGS FOR:
;	ERPLC:		RAM ERROR
;	ERPLC+1:	POKEY1
;	ERPLC+2:	POKEY2
;	ERPLC+3:	EAROM
;
	.PAGE
	.SBTTL TEST POKEY & EAROM
STEST4:	LDX #05
	LDA RAND2
	BEGIN
	CMP RAND2		;MAKE SURE ITS RUNNING
	BNE OK1			;YES -- RANDOM #'S DIFFERENT
	DEX			;ELSE CHECK 5 TIMES
	MIEND
	STA ERPLC+1		;BAD POKEY1
OK1:	LDX #05
	LDA RANDOM
	BEGIN
	CMP RANDOM
	BNE OK2
	DEX
	MIEND
	STA ERPLC+2		;BAD POKEY
OK2:	CLI
	JSR REHIIN		;READ EAROM
	LDY #02			;DEFAULT GOOD
	LDA EABAD		;ERROR??
	IFNE
	STA ERPLC+3		;BAD EAROM
	JSR EAZERO		;CLEAR IT IF BAD
	LDY #0
	STY EABAD
	ENDIF
	STY TESTNM		;WHICH STATE FIRST?
	JMP DIAGM		;DO DIAG MAIN LINE
	.PAGE
	.SBTTL BAD EAROM RECOVERY
STEST5:	
	LDA EAFLG
	ORA EAREQU
	IFEQ			;DONE ERASING?
	JSR REHIIN		;TRY ANOTHER READ
	LDA EABAD
	STA ERPLC+3		;STILL BAD? (REPORT)
	LDA #2
	STA TESTNM		;GO STRAIGHT TO REPORT
	ENDIF
	RTS

	.PAGE
	.SBTTL REPORT PROBLEMS & DISPLAY SWITCHES
STEST6:				;COCKTAIL??
	LDA I,1
	JSR VGSCAL
	LDY #WHITE+0A0
	LDA I,4
	JSR VGSTAT
	LXL FRCFL
	LAH FRCFL
	JSR VGJSRL
	LDA #48
	LDX #40
	LDY I,0
	JSR VGVTR
	JSR OPTN2		;OUTPUT OPTION SWITCHES
	LDX	I,46
	STX	TEMP3		;STARTING Y VALUE CHECK SUMS
	LDX	I,9
	BEGIN
	LDA	ZX,PNTTBL
	IFNE
	STX	TEMP2		;SAVE CHKSUM #
	JSR	VGCNTR		;CENTER BEAM
	LDX	TEMP3
	TXA
	SEC
	SBC	I,08		;32. BELOW CURRENT LINE
	STA	TEMP3
	LDA	I,-10.
	LDY I,0
	JSR	VGVTR		;POSITION BEAM
	LDA	TEMP2
	JSR	DIGITZ		;ROM #
	LDX	TEMP2
	ENDIF
	DEX
	MIEND
	JSR VGCNTR
	LDA #-10.
	LDX #58
	LDY I,0
	JSR VGVTR		;POSITION FOR ERROR LIST
	LDX #3
	STX TEMP2
	BEGIN
	LDX TEMP2
	LDY #0
	LDA X,ERPLC		;ANY BAD NEWS?
	IFNE
	LDY X,BADNWS
	ENDIF
	LDA Y,VGMSGA
	LDX Y,VGMSGA+1		;GET LETTER
	JSR VGADD2
	DEC TEMP2
	MIEND
	JSR SWTST		;BEEP ON SWITCH CLOSURE
	RTS
;
;
	.PAGE
	.SBTTL PATTERN TEST & ALPEHBET (TELL A FRIEND)
STEST7:	LXL QTST6
	LAH QTST6
	JMP VGJSRL
	.SBTTL HYSTERSIS & SOUND TEST
STEST8: JSR VGCNTR 
	LDA I,1
	JSR VGSCAL
	LDA I,4 
	LDY I,0A4
	JSR VGSTAT
	LDA I,0 
	STA Z,XLSB
	STA Z,YMSB
	STA Z,YLSB
	LDA I,-4
	STA Z,XMSB
	LDA I,0F0
	STA VGBRIT
	LDX I,XCOMP
	JSR VGVCTR
	LDA I,20 
	STA TEMP1
	BEGIN
	LDA I,0
	STA Z,YMSB
	STA Z,YLSB
	STA Z,XLSB
	LDA I,8
	STA Z,XMSB
	LDA I,0F0
	STA VGBRIT
	LDX I,XCOMP
	JSR VGVCTR
	LDA I,0
	STA Z,YLSB
	STA Z,YMSB
	STA Z,XLSB
	LDA I,-8
	STA Z,XMSB
	LDA I,0F0
	STA VGBRIT
	LDX I,XCOMP
	JSR VGVCTR
	DEC TEMP1
	MIEND
	RTS
	XCOMP=5
	VGBRIT=0B
	.BYTE 16		;SNDTBL UNDERFLOW
SNDTBL:	.BYTE 0,10,2,12,4,14,6,16,0
SNDFRQ:	.BYTE 10,10,40,40,90,90,0FF,0FF 
	.PAGE
	.SBTTL COLOR BARS
STEST9:	LDA #01			;SET SCALE 1
	JSR VGSCA1		;SET SCALE
	LDY #06
	STY TEMP3
	BEGIN
	JSR VGCNTR		;CENTER
	LDY TEMP3
	LDA Y,POSIX		;POSITION THIS GROUP
	LDX Y,POSIY
	JSR VGVTR
	LDA TEMP3
	EOR #0FF
	AND #07
	TAY
	JSR VGSTAT
	LDA TEMP3		;WHITE GROUP?
	IFEQ
	LXL CLPT2
	LAH CLPT2		;SPECIAL WHITE GROUP
	ELSE
	LXL CLPAT
	LAH CLPAT
	ENDIF
	JSR VGJSRL
	DEC TEMP3
	MIEND
ST91:	LXL CL73		;LAST ON IS WHITE
	LAH CL73
	JSR VGJSRL
	RTS
;
DECMEC:	.BYTE	1,4,5,6		;DOLLAR MECH MULTIPLIERS
;
;X POSITION FOR BARS
POSIX:	.BYTE -22,-63,1F,-63,-22,1F,-22
;Y POSITION
POSIY:	.BYTE -0C,-28,-28,10,-28,10,10

BADNWS:	.BYTE 56.,52.,54.,30.
	.PAGE
	.SBTTL CHECKER BOARD
STST10:	JSR VGCNTR
	LDA #1
	JSR VGSCA1
	LDX #07			;NINE BARS HORIZ
	STX TEMP2
	JSR VGCNTR
	BEGIN
	LDY TEMP2
	LDA #-512./4
	LDX Y,HLPOS
	JSR VGVTR		;POSITION FOR THIS LINE
	LXL HLINE
	LAH HLINE		;DRAW LINE AND CENTER
	JSR VGJSRL
	DEC TEMP2
	MIEND
	LDX #11.		;THIRTEEN BARS VERT
	STX TEMP2
;	JSR VGCNTR		;LAST LINE ABOVE CENTERED
	BEGIN
	LDY TEMP2
	LDA Y,VLPOS
	LDX #+384./4
	JSR VGVTR
	LXL VLINE
	LAH VLINE
	JSR VGJSRL
	DEC TEMP2
	MIEND
	LDA IN2
	AND I,MSTRT1
	IFEQ
	ASL TEMP1		;DEBOUNCE COLOR SWITCH
	IFCS
	INC POINT1		;NEXT COLOR
	ENDIF
	ELSE
	LDA #20			;RESET NOT PUSHED
	STA TEMP1
	ENDIF
	RTS
HLPOS:	.BYTE -298./4,-213./4,-128./4,-43./4,43./4
	.BYTE 128./4,213./4,298./4
VLPOS:	.BYTE -433./4,-354./4,-276./4,-197./4,-118./4
	.BYTE -40./4,40./4,118./4,197./4,276./4
	.BYTE 354./4,433./4
	.PAGE
	.SBTTL DISPLAY OPTION SWITCHES
;
;		
OPTND:	JSR	VGCNTR		;CENTER BEAM
	LDA	I,-20./4
	LDX	I,4D
	JSR	VGVTR		;POSITION BEAM
	LDA	I,1
	JSR	DIGITZ		;1 FOR LEFT COIN MECH
	STA	POTGO2
	LDA	POKEY2		;READ 'OPTN3'
	STA	$CMODE
	AND	I,10
	LSR
	LSR
	LSR
	LSR			;0 OR 1
	ADC	I,1		;1 OR 2
	JSR	DIGITZ		;PUT CENTER MECH VALUE
	STA	POTGO2
	LDA	POKEY2		;READ 'OPTN3'
	AND	I,0C
	LSR
	LSR
	TAX
	LDA	AX,DECMEC
	JSR	DIGITZ		;DOLLAR MECH VALUE
	LDA #-58.
	LDX #-18.
	JSR VGVTR		;POSITION FOR NEXT LINE
	LDA #-1
	STA TEMP3		;FLAG FOR POSITION
OPTN2:	LDX	I,15.
	STX	TEMP2
	STA POTGO		;READ OPTN1
	LDA	POKEY+8
	STA	TEMP4
	STA	POTGO2
	LDA	POKEY2+8		;READ 'OPTN3'
	BEGIN
	PHA
	AND	I,1
	CLC
	JSR	DIGITZ		;DISPLAY 0 OR 1
	LSR	TEMP4
	PLA
	ROR
	DEC	TEMP2
	MIEND
	LDA I,0D0
	LDY I,0
	LDX #0F8		;POSITION FOR NEXT LINE
	JSR VGVTR
	LDX #7			;DO ALL OTHER SWITCHES
	STX TEMP2
	LDA I,78
	STA POINT2
	BEGIN
	LDA I,7
	STA POINT3
	LDA I,0
	STA POINT1
	TAY
	LDA NY,POINT1
	EOR I,0FF
	AND I,7F
	BEGIN
	PHA
	AND I,1
	CLC
	JSR DIGITZ
	PLA
	ROR
	INY
	DEC POINT3
	MIEND
	LDA I,0D0
	LDY I,0
	LDX #0F8
	JSR VGVTR		;POSITION FOR NEXT LINE
	LDA POINT2
	CLC
	ADC I,8
	STA POINT2
	CMP I,90
	CSEND
	RTS
	.SBTTL	SWITCH TEST (BEEP)

SWTST:	
	STY TEMP4
	LDA IN0
	AND I,0F
	STA TEMP1
	LDA IN1
	AND I,1F
	STA TEMP2
	LDA XYRFLT
	AND I,7F
	STA TEMP3
	LDA TEMP1
	ORA I,10
	AND TEMP2
	ORA I,60
	AND TEMP3
	EOR I,7F
	IFNE
	ADC #40
	STA POKEY
	LDY #0A4
	ENDIF
	STY POKEY+1
	RTS
	.PAGE
	.SBTTL MAIN LINE
DIAGM:				;MAIN LINE DIAG LOOP
	BEGIN
10$:	LDX #18
	BEGIN
	BEGIN
	BIT HALT		;16MS WAIT
	MIEND
	BEGIN
	BIT HALT
	PLEND
	DEX
	MIEND
	INC FRAME
	BEGIN
	BIT HALT		;STOPPED?
	VSEND
VGLD:	LDA #VECRAM&0FF		;RELOAD VG
	STA VGLIST
	LDA #VECRAM&0FF00/100
	STA VGLIST+1
	LDA IN0
	EOR #0FF
	AND I,MDIAG!MCOIAX		;SWITCH PUSHED?
	IFNE
	ASL DIFF1
	IFCS			;PRESSED LONG ENOUGH?
	LDA IN2
	AND I,MSTRT2
	IFEQ			;YES
	JSR INISOU		;SOUND OFF
	JMP XYINIT		;GONE TO SIG ANAL NOT TO RETURN
	ENDIF
	INC TESTNM
	INC TESTNM		;NEXT TEST
	LDA #0
	LDX #06
	BEGIN
	STA X,POKEY
	STA X,POKEY2
	DEX
	DEX
	MIEND
	ENDIF
	ELSE
	LDA #20
	STA DIFF1		;NOT PRESSED, RESTART TIMER
	ENDIF
	LDA TESTNM
	CMP #0A			;SPECIAL COLORS HERE
	IFEQ
	LDA POINT1
	AND #07
	IFEQ
	LDA #01
	ENDIF
	ORA #0C0		;INTENSITY
	TAY
	ELSE
	LDY #WHITE+0A0		;PUT UP WHITE BOX
	ENDIF
	LDA I,4
	JSR VGSTAT
	LDX TESTNM
	CPX I,6
	IFNE
	LXL FRCFL
	LAH FRCFL
	JSR VGJSRL		;DO BOX
	THEN
	JSR DOSTATE		;DO THIS ROUTINE
	JSR VGCNTR
	JSR VGHALT		;CENTER AND HALT
	STA VGSTART		;START DISPLAY	
	STA WTCHDG
	LDA IN0			;STILL SELF TEST?
	AND I,MSTEST
	NEEND
WDRST:	JMP POWERON		;WATCH-DOG RESET FOR EXIT
	.PAGE
	.SBTTL DO-CASE ROUTINE
SFTJSR:
	.WORD STEST5-1		;EAROM ERROR CORRECTION
	.WORD STEST6-1		;DISPLAY SWITCHES & REPORT PROBLEMS
	.WORD STEST7-1		;CROSS HATCH $ ALPHA
	.WORD STEST8-1		;SOUND & HYSTERSIS
	.WORD STEST9-1		;COLOR BARS
	.WORD STST10-1		;HATCH
SFTJSE:
DOSTATE:
	LDX TESTNM
	CPX #SFTJSE-SFTJSR	;NON VALID STATE?
	IFCS
	LDX #2
	STX TESTNM		;START OVER
	ENDIF
	LDA X,SFTJSR+1
	PHA
	LDA X,SFTJSR
	PHA
	RTS			;RTS (JUMP CASE)
	.VCTRS 0EFFA,POWERON,POWERON,IRQ
	HLL65
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       